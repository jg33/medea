// Generated by CoffeeScript 1.10.0
var bDebug, bShowingMessage, checkServer, displayMessage, draw, drawText, keyPressed, message, messageOpacity, mousePressed, setup, sharedData, socket, windowResized;

sharedData = [];

socket = io('http://cornea:3000');

bShowingMessage = false;

message = "didn't work.";

messageOpacity = 0;

bDebug = true;

setup = function() {
  createCanvas(window.innerWidth, window.innerHeight);
  if (geoCheck()) {
    return console.log("geo good!");
  } else {
    return console.log("geo bad!");
  }
};

draw = function() {
  background(0);
  fill(255, 0, 0);
  ellipse(mouseX, mouseY, 40, 40);
  switch (sharedData.currentScene) {
    case 0:
      background(0);
      if (bShowingMessage) {
        fill(255, messageOpacity);
        text(message, width / 2, height / 2);
      }
      break;
    case 1:
      drawText();
  }
  if (bDebug) {
    fill(255);
    return text("Current Scene " + sharedData.currentScene, 0, 10);
  }
};

mousePressed = function() {
  return socket.emit("clickTest", "HI HI HI");
};

keyPressed = function() {
  console.log("pressed " + key);
  if (key === 'L') {
    console.log("pressed l");
    getCurrentPosition(function(pos) {
      return displayMessage("my position is: " + pos.latitude + " " + pos.longitude);
    });
  }
  return false;
};

windowResized = function() {
  return resizeCanvas(window.innerWidth, window.innerHeight);
};

checkServer = function() {
  socket.emit('hello', 'ping!');
  console.log("pinging server...");
  return disableScroll.on();
};

socket.on('pingback', function(data) {
  console.log(data.testString);
  return sharedData = data;
});

socket.on('showMsg', function(data) {
  return displayMessage(data);
});

drawText = function() {
  textAlign("center");
  return text("hello friends", width / 2, height / 2);
};

displayMessage = function(msg) {
  console.log("showing message:" + msg);
  message = msg;
  messageOpacity = 255;
  bShowingMessage = true;
  return setTimeout(function() {
    messageOpacity = 0;
    return bShowingMessage = false;
  }, 10000);
};

setInterval(checkServer, 1000);

//# sourceMappingURL=client.js.map
