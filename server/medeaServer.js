// Generated by CoffeeScript 1.10.0
var clickTest, clientIDs, connectedUsers, handleHello, io, keypress, server, setScene, sharedData;

server = require('http').createServer();

io = require('socket.io')(server);

keypress = require('keypress');

keypress(process.stdin);

clientIDs = [];

sharedData = {
  currentScene: 0,
  testString: "testThing"
};

connectedUsers = 0;

handleHello = function(data) {
  console.log("hello " + this.id);
  return io.sockets.sockets[this.id].emit('pingback', sharedData);
};

clickTest = function(data) {
  console.log("clicked in: " + this.id);
  return io.sockets.sockets[this.id].emit('showMsg', "HI, DUM DUM");
};

io.on('connection', function(socket) {
  connectedUsers++;
  clientIDs.push(socket.id);
  console.log("user connected! " + connectedUsers + " connected. ID= " + socket.id);
  socket.on('hello', handleHello);
  socket.on('clickTest', clickTest);
  return socket.on('disconnect', function() {
    connectedUsers--;
    return console.log("disconnected... " + connectedUsers + " left.");
  });
});

setScene = function(newScene) {
  sharedData.currentScene = newScene;
  console.log("set scene " + newScene);
  return io.emit('pingback', sharedData);
};

process.stdin.on('keypress', function(ch, key) {
  console.log('got keypress ', key);
  if (key && key.name === 'x') {
    return process.exit();
  } else if (key && key.name === 'q') {
    return setScene(1);
  } else if (key && key.name === 'w') {
    return setScene(2);
  } else if (key && key.name === 'e') {
    return setScene(3);
  } else if (key && key.name === 'r') {
    return setScene(4);
  } else if (key && key.name === 't') {
    return setScene(5);
  } else if (key && key.name === 'y') {
    return setScene(6);
  } else if (key && key.name === 'u') {
    return setScene(7);
  } else if (key && key.name === 'i') {
    return setScene(8);
  } else if (key && key.name === 'o') {
    return setScene(9);
  } else if (key && key.name === 'p') {
    return setScene(10);
  }
});

process.stdin.setRawMode(true);

process.stdin.resume();

server.listen(3000);

console.log("running...");

//# sourceMappingURL=medeaServer.js.map
